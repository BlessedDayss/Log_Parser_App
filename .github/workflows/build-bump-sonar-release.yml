name: Build and Publish EXE to GitHub Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Publish self-contained EXE
        run: |
          dotnet publish \
            --configuration Release \
            --runtime win-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -o publish/

      - name: Bump version in csproj
        id: bump
        run: |
          $file = './Log_Parser_App.csproj'
          $content = Get-Content $file
          $versionLine = Select-String '<Version>(.*)</Version>' -InputObject $content
          if (-not $versionLine) {
            # если Version нет, добавить стартовую
            $content = $content -replace '</PropertyGroup>', "  <Version>0.1.0</Version>`n</PropertyGroup>"
            $new = '0.1.0'
          } else {
            $current = $versionLine.Matches.Groups[1].Value
            $parts = $current -split '\.'
            $parts[2] = ([int]$parts[2] + 1).ToString()
            $new = "$($parts[0]).$($parts[1]).$($parts[2])"
            $content = $content -replace "<Version>.*</Version>", "<Version>$new</Version>"
          }
          Set-Content -Path $file -Value $content
          echo "NEW_VERSION=$new" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Commit bumped version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Log_Parser_App.csproj
          git commit -m "chore: bump version to v${{ env.NEW_VERSION }}"
          git push

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: "Automated release of version v${{ env.NEW_VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/Log_Parser_App.exe
          asset_name: Log_Parser_App.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
